#!/usr/bin/python

"""
Converts the first JSON item in stdin to bencode
"""

import os
import sys
sys.path.append(os.path.join(os.path.dirname(os.path.dirname(__file__)), "lib"))
import bencode
import json

# Needed on Windows, else output newlines will be corrupted
try:
	import msvcrt
except ImportError:
	pass
else:
	msvcrt.setmode(sys.stdout.fileno(), os.O_BINARY)

# This is the most convenient place to add support for our latin-1
# "Unicode" strings, unfortunately.
bencode.encode_func[unicode] = lambda x, r: bencode.encode_string(x.encode("latin-1"), r)

# Must use latin-1 because there are non-utf-8 bytestrings in there
# We still output legal JSON, the Unicode escapes just represent bytes
# instead of Unicode codepoints.
sys.stdout.write(bencode.bencode(json.loads(sys.stdin.read())))
